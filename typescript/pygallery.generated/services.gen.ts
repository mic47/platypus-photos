// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { ImageEndpointImgGetData, ImageEndpointImgGetResponse, LocationClustersEndpointApiLocationClustersPostData, LocationClustersEndpointApiLocationClustersPostResponse, LocationBoundsEndpointApiBoundsPostData, LocationBoundsEndpointApiBoundsPostResponse, DateClustersEndpointApiDateClustersPostData, DateClustersEndpointApiDateClustersPostResponse, MassManualAnnotationEndpointApiMassManualAnnotationPostData, MassManualAnnotationEndpointApiMassManualAnnotationPostResponse, MapSearchEndpointInternalMapSearchHtmlPostData, MapSearchEndpointInternalMapSearchHtmlPostResponse, JobProgressEndpointInternalJobProgressHtmlPostData, JobProgressEndpointInternalJobProgressHtmlPostResponse, JobListEndpointInternalJobListHtmlPostData, JobListEndpointInternalJobListHtmlPostResponse, SystemStatusEndpointInternalSystemStatusHtmlPostResponse, SubmitAnnotationOverlayFormEndpointInternalSubmitAnnotationsOverlayHtmlPostData, SubmitAnnotationOverlayFormEndpointInternalSubmitAnnotationsOverlayHtmlPostResponse, FetchLocationInfoEndpointInternalFetchLocationInfoHtmlPostData, FetchLocationInfoEndpointInternalFetchLocationInfoHtmlPostResponse, DirectoriesEndpointInternalDirectoriesHtmlPostData, DirectoriesEndpointInternalDirectoriesHtmlPostResponse, GalleryDivInternalGalleryHtmlPostData, GalleryDivInternalGalleryHtmlPostResponse, AggregateEndpointInternalAggregateHtmlPostData, AggregateEndpointInternalAggregateHtmlPostResponse, InputRequestInternalInputHtmlPostData, InputRequestInternalInputHtmlPostResponse, ReadIndexGetResponse, ReadIndexIndexHtmlGetResponse } from './types.gen';

/**
 * Image Endpoint
 * @param data The data for the request.
 * @param data.hsh
 * @param data.size
 * @returns unknown photo
 * @throws ApiError
 */
export const imageEndpointImgGet = (data: ImageEndpointImgGetData): CancelablePromise<ImageEndpointImgGetResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/img',
    query: {
        hsh: data.hsh,
        size: data.size
    },
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Location Clusters Endpoint
 * @param data The data for the request.
 * @param data.requestBody
 * @returns LocationCluster Successful Response
 * @throws ApiError
 */
export const locationClustersEndpointApiLocationClustersPost = (data: LocationClustersEndpointApiLocationClustersPostData): CancelablePromise<LocationClustersEndpointApiLocationClustersPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/api/location_clusters',
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Location Bounds Endpoint
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const locationBoundsEndpointApiBoundsPost = (data: LocationBoundsEndpointApiBoundsPostData): CancelablePromise<LocationBoundsEndpointApiBoundsPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/api/bounds',
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Date Clusters Endpoint
 * @param data The data for the request.
 * @param data.requestBody
 * @returns DateCluster Successful Response
 * @throws ApiError
 */
export const dateClustersEndpointApiDateClustersPost = (data: DateClustersEndpointApiDateClustersPostData): CancelablePromise<DateClustersEndpointApiDateClustersPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/api/date_clusters',
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Mass Manual Annotation Endpoint
 * @param data The data for the request.
 * @param data.requestBody
 * @returns number Successful Response
 * @throws ApiError
 */
export const massManualAnnotationEndpointApiMassManualAnnotationPost = (data: MassManualAnnotationEndpointApiMassManualAnnotationPostData): CancelablePromise<MassManualAnnotationEndpointApiMassManualAnnotationPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/api/mass_manual_annotation',
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Map Search Endpoint
 * @param data The data for the request.
 * @param data.requestBody
 * @returns string Successful Response
 * @throws ApiError
 */
export const mapSearchEndpointInternalMapSearchHtmlPost = (data: MapSearchEndpointInternalMapSearchHtmlPostData): CancelablePromise<MapSearchEndpointInternalMapSearchHtmlPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/internal/map_search.html',
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Job Progress Endpoint
 * @param data The data for the request.
 * @param data.requestBody
 * @returns string Successful Response
 * @throws ApiError
 */
export const jobProgressEndpointInternalJobProgressHtmlPost = (data: JobProgressEndpointInternalJobProgressHtmlPostData): CancelablePromise<JobProgressEndpointInternalJobProgressHtmlPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/internal/job_progress.html',
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Job List Endpoint
 * @param data The data for the request.
 * @param data.requestBody
 * @returns string Successful Response
 * @throws ApiError
 */
export const jobListEndpointInternalJobListHtmlPost = (data: JobListEndpointInternalJobListHtmlPostData): CancelablePromise<JobListEndpointInternalJobListHtmlPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/internal/job_list.html',
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * System Status Endpoint
 * @returns string Successful Response
 * @throws ApiError
 */
export const systemStatusEndpointInternalSystemStatusHtmlPost = (): CancelablePromise<SystemStatusEndpointInternalSystemStatusHtmlPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/internal/system_status.html'
}); };

/**
 * Submit Annotation Overlay Form Endpoint
 * @param data The data for the request.
 * @param data.requestBody
 * @returns string Successful Response
 * @throws ApiError
 */
export const submitAnnotationOverlayFormEndpointInternalSubmitAnnotationsOverlayHtmlPost = (data: SubmitAnnotationOverlayFormEndpointInternalSubmitAnnotationsOverlayHtmlPostData): CancelablePromise<SubmitAnnotationOverlayFormEndpointInternalSubmitAnnotationsOverlayHtmlPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/internal/submit_annotations_overlay.html',
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Fetch Location Info Endpoint
 * @param data The data for the request.
 * @param data.requestBody
 * @returns string Successful Response
 * @throws ApiError
 */
export const fetchLocationInfoEndpointInternalFetchLocationInfoHtmlPost = (data: FetchLocationInfoEndpointInternalFetchLocationInfoHtmlPostData): CancelablePromise<FetchLocationInfoEndpointInternalFetchLocationInfoHtmlPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/internal/fetch_location_info.html',
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Directories Endpoint
 * @param data The data for the request.
 * @param data.requestBody
 * @returns string Successful Response
 * @throws ApiError
 */
export const directoriesEndpointInternalDirectoriesHtmlPost = (data: DirectoriesEndpointInternalDirectoriesHtmlPostData): CancelablePromise<DirectoriesEndpointInternalDirectoriesHtmlPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/internal/directories.html',
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Gallery Div
 * @param data The data for the request.
 * @param data.requestBody
 * @param data.oi
 * @returns string Successful Response
 * @throws ApiError
 */
export const galleryDivInternalGalleryHtmlPost = (data: GalleryDivInternalGalleryHtmlPostData): CancelablePromise<GalleryDivInternalGalleryHtmlPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/internal/gallery.html',
    query: {
        oi: data.oi
    },
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Aggregate Endpoint
 * @param data The data for the request.
 * @param data.requestBody
 * @returns string Successful Response
 * @throws ApiError
 */
export const aggregateEndpointInternalAggregateHtmlPost = (data: AggregateEndpointInternalAggregateHtmlPostData): CancelablePromise<AggregateEndpointInternalAggregateHtmlPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/internal/aggregate.html',
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Input Request
 * @param data The data for the request.
 * @param data.requestBody
 * @returns string Successful Response
 * @throws ApiError
 */
export const inputRequestInternalInputHtmlPost = (data: InputRequestInternalInputHtmlPostData): CancelablePromise<InputRequestInternalInputHtmlPostResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/internal/input.html',
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        422: 'Validation Error'
    }
}); };

/**
 * Read Index
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const readIndexGet = (): CancelablePromise<ReadIndexGetResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/'
}); };

/**
 * Read Index
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const readIndexIndexHtmlGet = (): CancelablePromise<ReadIndexIndexHtmlGetResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/index.html'
}); };